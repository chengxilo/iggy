# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# -------------------------------------------------------------
#
# CI Check Go Workflow
#
# This workflow runs checks for go sdk code.
# Checks include:
# - go build
# - test (include both unit test and e2e test)
#
# This workflow can be triggered manually or by other workflows.
#
name: ci-check-go-sdk

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'

      - name: Go Build
        working-directory: foreign/go
        run: go build ./...

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'

      # run Iggy
      - name: Run Iggy
        uses: docker run --rm -p 8080:8080 -p 3000:3000 -p 8090:8090 apache/iggy:edge

      # Install ginkgo for E2E test.
      - name: Install Ginkgo CLI
        run: go install github.com/onsi/ginkgo/v2/ginkgo@latest

      - name: Test
        working-directory: foreign/go
        run: go test ./...

      - name: Docker Compose Down
        if: always()
        run: docker compose down